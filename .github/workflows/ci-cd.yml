name: CI/CD Pipeline

on:
    push:
        branches: [main, develop]
    pull_request:
        branches: [main]

env:
    IMAGE_NAME: flask-ci-cd-app
    AWS_EC2_HOST: ${{ secrets.AWS_EC2_HOST }}
    AWS_EC2_USER: ubuntu

jobs:
    test:
        runs-on: ubuntu-latest

        steps:
            - name: Checkout code
              uses: actions/checkout@v4

            - name: Set up Python
              uses: actions/setup-python@v4
              with:
                  python-version: "3.9"

            - name: Install dependencies
              run: |
                  python -m pip install --upgrade pip
                  pip install -r requirements.txt
                  pip install pytest

            - name: Run tests
              run: |
                  pytest -v tests/

    build-and-push:
        needs: test
        runs-on: ubuntu-latest
        if: github.ref == 'refs/heads/main'

        steps:
            - name: Checkout code
              uses: actions/checkout@v4

            - name: Set up Docker Buildx
              uses: docker/setup-buildx-action@v3

            - name: Log in to Docker Hub
              uses: docker/login-action@v3
              with:
                  username: ${{ secrets.DOCKERHUB_USERNAME }}
                  password: ${{ secrets.DOCKERHUB_TOKEN }}

            - name: Extract metadata
              id: meta
              uses: docker/metadata-action@v5
              with:
                  images: ${{ secrets.DOCKERHUB_USERNAME }}/${{ env.IMAGE_NAME }}
                  tags: |
                      type=ref,event=branch
                      type=sha,prefix={{branch}}-
                      type=raw,value=latest,enable={{is_default_branch}}

            - name: Build and push Docker image
              uses: docker/build-push-action@v5
              with:
                  context: .
                  push: true
                  tags: ${{ steps.meta.outputs.tags }}
                  labels: ${{ steps.meta.outputs.labels }}
                  cache-from: type=gha
                  cache-to: type=gha,mode=max

    deploy-staging:
        needs: build-and-push
        runs-on: ubuntu-latest
        if: github.ref == 'refs/heads/main'

        steps:
            - name: Checkout code
              uses: actions/checkout@v4

            - name: Deploy to EC2
              uses: appleboy/ssh-action@v1.0.3
              with:
                  host: ${{ secrets.AWS_EC2_HOST }}
                  username: ${{ env.AWS_EC2_USER }}
                  key: ${{ secrets.AWS_EC2_SSH_KEY }}
                  script: |
                      cd /opt/app
                      git init
                      git remote add origin https://github.com/PhilipOyelegbin/automated-flaskapp-deployment.git
                      git pull origin main
                      docker-compose down
                      docker-compose pull
                      docker-compose up -d
                      echo "Deployment to staging completed successfully!"

    notify:
        needs: [test, build-and-push, deploy-staging]
        runs-on: ubuntu-latest
        if: always()

        steps:
            - name: Notify Slack
              uses: 8398a7/action-slack@v3
              with:
                  status: ${{ job.status }}
                  text: ðŸš€ Deployment ${{ job.status }} for commit ${{ github.sha }}
                  webhook_url: ${{ secrets.SLACK_WEBHOOK_URL }}
              env:
                  SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
